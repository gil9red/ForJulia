#include "mainwindow.h"
#include <QApplication>

//2.Используя классы,создать m квадратных и n круглых объектов. Цвет и
//характерный размер каждого объекта задаются случайным образом.
//Характерным размером для круга является дивметр,для квадрата-сторона.

//Все объекты перемещаются.
//Траектории движения квадратных объектов - окружности с радиусом,равным стороне квадрата,умноженной на 10.
//Считаем,что центр квадрата находится на окружности,описывающей траекторию.
//Центр окружности задается случайным образом,но так,чтобы он был виден
//на экране.
//
//Траектории движения круглых объектов - квадраты со стороной,
//равной диаметру круглого объекта,умноженному на 10. Считаем,что центр
//круглого объекта находится на стороне квадрата.
//
//Центр квадрата задается случайным образом,но так,чтобы он был виден на экране.
//При пересечении объектов они проходят друг сквозь друга,не меняя ни
//форму, ни цвет.
//Предусмотреть поглощение одних объектов другими. Поглощение
//происходит при столкновении объектов.Меньший объект поглощается большим.
//При этом меньший объект удаляется из списка объектов,а его изображение
//стирается с экрана.У большего объекта характерный размер увеличивается
//на 10%

#include <QPushButton>
#include <QPropertyAnimation>
#include <QSequentialAnimationGroup>

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

//    QPushButton button("Animated Button");
//    button.show();

//    QPropertyAnimation anim1(&button, "geometry");
//    anim1.setDuration(3000);
//    anim1.setStartValue(QRect(0, 0, 100, 30));
//    anim1.setEndValue(QRect(500, 500, 100, 30));

//    QPropertyAnimation anim2(&button, "geometry");
//    anim2.setDuration(3000);
//    anim2.setStartValue(QRect(500, 500, 100, 30));
//    anim2.setEndValue(QRect(1000, 500, 100, 30));

//    QSequentialAnimationGroup group;

//    group.addAnimation(&anim1);
//    group.addAnimation(&anim2);

//    group.start();

    return a.exec();
}
